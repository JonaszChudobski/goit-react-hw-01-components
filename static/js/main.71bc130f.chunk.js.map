{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendsList/FriendListItem.module.css","components/FriendsList/FriendsList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendsList/FriendsListItem.js","components/FriendsList/FriendsList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","profile","description","avatar","name","tag","location","stats","label","quantity","statistics","statList","item","status","true","false","friendList","transactionHistory","Profile","_ref","username","React","createElement","className","css","src","alt","followers","views","likes","Statistics","title","map","stat","key","id","style","backgroundColor","Math","floor","random","toString","percentage","FriendsListItem","isOnline","width","FriendsList","friends","friend","TransactionHistory","items","type","amount","currency","App","Fragment","user","data","transactions","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.71bc130f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__OQpHp\",\"description\":\"Profile_description__2CIIn\",\"avatar\":\"Profile_avatar__2W0Xs\",\"name\":\"Profile_name__6mSr8\",\"tag\":\"Profile_tag__1pwEN\",\"location\":\"Profile_location__3MBy9\",\"stats\":\"Profile_stats__3bglt\",\"label\":\"Profile_label__-owUT\",\"quantity\":\"Profile_quantity__1i5e9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2DtLD\",\"statList\":\"Statistics_statList__1kmO0\",\"item\":\"Statistics_item__3vPah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__V3kdg\",\"status\":\"FriendListItem_status__1IcgP\",\"true\":\"FriendListItem_true__2wUGp FriendListItem_status__1IcgP\",\"false\":\"FriendListItem_false__1z-Nx FriendListItem_status__1IcgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendsList_friendList__eZarh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2aDRZ\"};","import React from \"react\";\r\nimport css from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Profile = ({ username, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={css.profile}>\r\n      <div className={css.description}>\r\n        <img src={avatar} alt=\"User avatar\" className={css.avatar} />\r\n        <p className={css.name}>{username}</p>\r\n        <p className={css.tag}>@{tag}</p>\r\n        <p className={css.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={css.stats}>\r\n        <li>\r\n          <span className={css.label}>Followers</span>\r\n          <span className={css.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Views</span>\r\n          <span className={css.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Likes</span>\r\n          <span className={css.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport css from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst color = () => {\r\n  return Math.floor(Math.random() * 16777215).toString(16);\r\n};\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n      <ul className={css.statList}>\r\n        {stats.map((stat) => (\r\n          <li\r\n            key={stat.id}\r\n            className={css.item}\r\n            style={{ backgroundColor: \"#\" + color() }}\r\n          >\r\n            <span className={css.label}>{stat.label}</span>\r\n            <span className={css.percentage}>{stat.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport css from \"./FriendListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const FriendsListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={css.item}>\r\n      <span className={css[isOnline]}></span>\r\n      <img className={css.avatar} src={avatar} alt=\"User avatar\" width=\"48\" />\r\n      <p className={css.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport css from \"./FriendsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FriendsListItem } from \"./FriendsListItem\";\r\n\r\nexport const FriendsList = ({ friends }) => {\r\n  return (\r\n    <ul className={css.friendList}>\r\n      {friends.map((friend) => (\r\n        <FriendsListItem\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n          key={friend.id}\r\n        ></FriendsListItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport css from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={css.transactionHistory}>\r\n      <thead>\r\n        <tr key=\"0\">\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Profile } from \"./components/Profile/Profile\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\nimport { FriendsList } from \"./components/FriendsList/FriendsList\";\nimport { TransactionHistory } from \"./components/TransactionHistory/TransactionHistory\";\nimport user from \"./user.json\";\nimport data from \"./data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      ></Profile>\n      <Statistics title=\"Upload stats\" stats={data}></Statistics>\n      <Statistics stats={data}></Statistics>\n      <FriendsList friends={friends}></FriendsList>\n      <TransactionHistory items={transactions}></TransactionHistory>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}